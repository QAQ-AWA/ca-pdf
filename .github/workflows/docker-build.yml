name: Docker Build and Publish

on:
  push:
    branches: [main]
    tags: ["v*"]
    paths:
      - "backend/**"
      - "frontend/**"
      - "docker-compose.yml"
      - ".github/workflows/docker-build.yml"
  workflow_dispatch:

permissions:
  contents: read
  packages: write
  id-token: write

concurrency:
  group: docker-build-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-push:
    name: Build and publish multi-arch images
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - service: backend
            dockerfile: backend/Dockerfile
            build-args: |
              BUILD_VERSION=${{ github.ref_name }}
              COMMIT_SHA=${{ github.sha }}
          - service: frontend
            dockerfile: frontend/Dockerfile
            build-args: |
              BUILD_VERSION=${{ github.ref_name }}
              COMMIT_SHA=${{ github.sha }}
              VITE_API_BASE_URL=${{ vars.VITE_API_BASE_URL || 'https://api.example.com' }}
              VITE_PUBLIC_BASE_URL=${{ vars.VITE_PUBLIC_BASE_URL || 'https://app.example.com' }}
              VITE_APP_NAME=${{ vars.VITE_APP_NAME || 'Monorepo UI' }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata (${{ matrix.service }})
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}-${{ matrix.service }}
          tags: |
            type=sha,format=long
            type=ref,event=tag
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}

      - name: Build and push image (${{ matrix.service }})
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: true
          platforms: linux/amd64,linux/arm64
          provenance: true
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha,scope=${{ matrix.service }}
          cache-to: type=gha,scope=${{ matrix.service }},mode=max
          build-args: ${{ matrix.build-args }}
