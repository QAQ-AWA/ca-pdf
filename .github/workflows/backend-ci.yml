name: Backend CI

on:
  push:
    branches: [main]
    paths:
      - "backend/**"
      - "Makefile"
      - ".github/workflows/backend-ci.yml"
  pull_request:
    paths:
      - "backend/**"
      - "Makefile"
      - ".github/workflows/backend-ci.yml"
  workflow_dispatch:

jobs:
  lint-test:
    name: Lint, test, and check migrations
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: backend_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres -d backend_test"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      APP_NAME: "Monorepo API"
      DATABASE_URL: "postgresql+asyncpg://postgres:postgres@localhost:5432/backend_test"
      SECRET_KEY: "test-secret-key"
      ACCESS_TOKEN_EXPIRE_MINUTES: "2"
      REFRESH_TOKEN_EXPIRE_MINUTES: "10"
      BACKEND_CORS_ORIGINS: '["http://testclient"]'
      AUTH_RATE_LIMIT_REQUESTS: "5"
      AUTH_RATE_LIMIT_WINDOW_SECONDS: "60"
      ADMIN_EMAIL: "admin@example.com"
      ADMIN_PASSWORD: "AdminPass123!"
      ADMIN_ROLE: "admin"
      ENCRYPTED_STORAGE_ALGORITHM: "fernet"
      ENCRYPTED_STORAGE_MASTER_KEY: "L9oZbBY7bRHt9aCJloPAV9ooa-QKdfYU0uf5KIKGJ28="
      POETRY_VIRTUALENVS_IN_PROJECT: "true"
      POETRY_NO_INTERACTION: "1"

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Cache Poetry downloads
        uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-pypoetry-${{ hashFiles('backend/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-pypoetry-

      - name: Cache virtual environment
        uses: actions/cache@v4
        with:
          path: backend/.venv
          key: ${{ runner.os }}-backend-venv-${{ hashFiles('backend/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-backend-venv-

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          poetry --version

      - name: Install backend dependencies
        working-directory: backend
        run: poetry install --no-interaction --no-ansi

      - name: Run formatters (black & isort)
        working-directory: backend
        run: |
          poetry run black --check app tests
          poetry run isort --check-only app tests

      - name: Run mypy
        working-directory: backend
        run: poetry run mypy app

      - name: Run database migrations
        working-directory: backend
        run: poetry run alembic upgrade head

      - name: Run backend tests
        working-directory: backend
        run: poetry run pytest -q
