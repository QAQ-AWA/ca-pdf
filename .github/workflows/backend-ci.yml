name: Backend CI

on:
  push:
    branches: [main]
    paths:
      - "backend/**"
      - "Makefile"
      - ".github/workflows/backend-ci.yml"
  pull_request:
    paths:
      - "backend/**"
      - "Makefile"
      - ".github/workflows/backend-ci.yml"
  workflow_dispatch:

jobs:
  lint-test:
    name: Lint, test, and check migrations
    runs-on: ubuntu-latest
    env:
      APP_NAME: "Monorepo API"
      DATABASE_URL: "sqlite+aiosqlite:///./test_app.db"
      SECRET_KEY: "test-secret-key"
      ACCESS_TOKEN_EXPIRE_MINUTES: "2"
      REFRESH_TOKEN_EXPIRE_MINUTES: "10"
      BACKEND_CORS_ORIGINS: '["http://testclient"]'
      AUTH_RATE_LIMIT_REQUESTS: "5"
      AUTH_RATE_LIMIT_WINDOW_SECONDS: "60"
      ADMIN_EMAIL: "admin@example.com"
      ADMIN_PASSWORD: "AdminPass123!"
      ADMIN_ROLE: "admin"
      ENCRYPTED_STORAGE_ALGORITHM: "fernet"
      ENCRYPTED_STORAGE_MASTER_KEY: "L9oZbBY7bRHt9aCJloPAV9ooa-QKdfYU0uf5KIKGJ28="
      POETRY_VIRTUALENVS_IN_PROJECT: "true"
      POETRY_NO_INTERACTION: "1"
    defaults:
      run:
        working-directory: backend
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          poetry --version

      - name: Cache Poetry and virtual environment
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pypoetry
            backend/.venv
          key: ${{ runner.os }}-backend-${{ hashFiles('backend/poetry.lock') }}

      - name: Install backend dependencies
        run: poetry install --no-interaction --no-ansi

      - name: Run formatters (black & isort)
        run: |
          poetry run black --check app tests
          poetry run isort --check-only app tests

      - name: Run mypy
        run: poetry run mypy app

      - name: Run Alembic migrations
        run: poetry run alembic upgrade head

      - name: Run backend test suite
        run: poetry run pytest -q
